$date
	Fri Oct 31 19:16:22 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 10 ! P [9:0] $end
$var reg 8 " B [7:0] $end
$scope module con $end
$var wire 8 # B [7:0] $end
$var reg 10 $ P [9:0] $end
$var reg 4 % s1 [3:0] $end
$var reg 4 & s1in [3:0] $end
$var reg 4 ' s2 [3:0] $end
$var reg 4 ( s2in [3:0] $end
$var reg 4 ) s3 [3:0] $end
$var reg 4 * s3in [3:0] $end
$var reg 4 + s4 [3:0] $end
$var reg 4 , s4in [3:0] $end
$var reg 4 - s5 [3:0] $end
$var reg 4 . s5in [3:0] $end
$var reg 4 / s6 [3:0] $end
$var reg 4 0 s6in [3:0] $end
$var reg 4 1 s7 [3:0] $end
$var reg 4 2 s7in [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b111 2
b1010 1
b11 0
b11 /
b111 .
b1010 -
b1000 ,
b1011 +
b1001 *
b1100 )
b1001 (
b1100 '
b100 &
b100 %
b101010100 $
b10011010 #
b10011010 "
b101010100 !
$end
#10
b101010101 !
b101010101 $
b10011011 "
b10011011 #
#20
b101010110 !
b101010110 $
b1011 -
b1000 .
b1100 +
b1001 ,
b10011100 "
b10011100 #
#30
b101010111 !
b101010111 $
b10011101 "
b10011101 #
#40
b101011000 !
b101011000 $
b1100 -
b1001 .
b10011110 "
b10011110 #
#50
b101011001 !
b101011001 $
b10011111 "
b10011111 #
#60
b101100000 !
b101100000 $
b1011 1
b1000 2
b100 /
b100 0
b0 -
b0 .
b0 +
b0 ,
b0 )
b0 *
b0 '
b0 (
b1000 %
b101 &
b10100000 "
b10100000 #
#70
b101100001 !
b101100001 $
b10100001 "
b10100001 #
#80
b101100010 !
b101100010 $
b1 -
b1 .
b10100010 "
b10100010 #
#90
b101100011 !
b101100011 $
b10100011 "
b10100011 #
#100
b101100100 !
b101100100 $
b10 -
b10 .
b1 +
b1 ,
b10100100 "
b10100100 #
#110
b101100101 !
b101100101 $
b10100101 "
b10100101 #
#120
b101100110 !
b101100110 $
b11 -
b11 .
b10100110 "
b10100110 #

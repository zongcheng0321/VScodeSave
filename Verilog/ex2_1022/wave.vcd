$date
	Wed Oct 29 13:55:22 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 1 ! status $end
$var wire 13 " result [12:0] $end
$var reg 1 # aclk $end
$var reg 3 $ opcode [2:0] $end
$var reg 13 % x [12:0] $end
$var reg 13 & y [12:0] $end
$scope module alu $end
$var wire 1 # aclk $end
$var wire 3 ' opcode [2:0] $end
$var wire 13 ( x [12:0] $end
$var wire 13 ) y [12:0] $end
$var reg 13 * compare [12:0] $end
$var reg 13 + result [12:0] $end
$var reg 1 ! status $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 , i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 ,
bx +
bx *
b10 )
b100 (
b0 '
b10 &
b100 %
b0 $
0#
bx "
x!
$end
#5
0!
b100 "
b100 +
b100 *
1#
#10
0#
b1 $
b1 '
b1 ,
#15
b110 "
b110 +
1#
#20
0#
b10 $
b10 '
b10 ,
#25
b10 "
b10 +
1#
#30
0#
b11 $
b11 '
b11 ,
#35
1#
#40
0#
b100 $
b100 '
b100 ,
#45
1!
b0 "
b0 +
1#
#50
0#
b101 $
b101 '
b101 ,
#55
0!
b100 "
b100 +
1#
#60
0#
b110 $
b110 '
b110 ,
#65
b10 "
b10 +
1#
#70
0#
b111 $
b111 '
b111 ,
#75
b1000 "
b1000 +
1#
#80
0#
b1000 ,
